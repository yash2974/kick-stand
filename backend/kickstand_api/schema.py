from typing import Optional, Union
from pydantic import BaseModel, EmailStr, ConfigDict
from datetime import date, datetime

from sqlalchemy.types import Date

class UserCreate(BaseModel):
    user_id: str
    name: str
    email: EmailStr
    phone: str

class UserOut(BaseModel):
    user_id: str
    name: str
    email: EmailStr
    phone: str
    created_at: datetime  # Default to current date and time

    model_config = ConfigDict(
        from_attributes=True
    )

class VehicleCreate(BaseModel):
    vehicle_id: str
    model_name: str
    user_id: str
    

class VehicleOut(BaseModel):
    vehicle_id: str
    model_name: str
    user_id: str
    
class ExpenseCreate(BaseModel):
    # expense_id: int  # This will be auto-generated by the database
    vehicle_id: str
    user_id: str
    amount: float
    category: str
    date: date  
